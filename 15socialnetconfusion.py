# -*- coding: utf-8 -*-
"""15SocialNetConfusion.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_qJ3kZpudCgDNkyj2vV_1y3ii3RzUB2t

1. Implement logistic regression using Python to perform classification on Social_Network_Ads.csv dataset.
2. Compute Confusion matrix to find TP, FP, TN, FN, Accuracy, Error rate, Precision, Recall on the given dataset..
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression

df = pd.read_csv('Social_Network_Ads.csv')
df.head(10)

from sklearn.preprocessing import LabelEncoder

le = LabelEncoder()

df['Gender'] = le.fit_transform(df['Gender'])

df.head()

df.corr()

x = df.drop(['Purchased'], axis = 1)
x

y = df['Purchased']
y.head()

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)

model = LogisticRegression()
model.fit(x_train, y_train)

y_pred = model.predict(x_test)
y_pred

from sklearn.metrics import accuracy_score, confusion_matrix, precision_score, recall_score, ConfusionMatrixDisplay

accuracy_score(y_test,y_pred)

precision_score(y_test,y_pred, average='micro')

recall_score(y_test, y_pred)

cm = confusion_matrix(y_test, y_pred)

ConfusionMatrixDisplay(cm, display_labels = y.unique()).plot()

