# -*- coding: utf-8 -*-
"""14BostonHousing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YlH_1kUM3rwN0_5yvIPKgofyNis26g3l

<pre>
Create a Linear Regression Model using Python to predict home prices using Boston Housing Dataset.
The objective is to predict the value of prices of the house using the given features
</pre>
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import mean_squared_error, r2_score

data_url = "http://lib.stat.cmu.edu/datasets/boston"
raw_df = pd.read_csv(data_url, sep="\s+", skiprows=22, header=None)
data = np.hstack([raw_df.values[::2, :], raw_df.values[1::2, :2]])
target = raw_df.values[1::2, 2]

X = data
y = target

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Standardize the data
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# Create a linear regression model
model = LinearRegression()

# Train the model on the training data
model.fit(X_train_scaled, y_train)

# Predict the prices on the testing data
y_pred = model.predict(X_test_scaled)

# Evaluate the model using mean squared error and R-squared
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error (MSE): {mse:.2f}")
print(f"R-squared (R2): {r2:.2f}")

# Display the model coefficients and intercept
print("\nModel Coefficients:")
for i, coef in enumerate(model.coef_):
    print(f"Feature {coef:.2f}")
print(f"Intercept: {model.intercept_:.2f}")

# You can also print the first 10 actual and predicted home prices
print("\nActual vs Predicted Prices (first 10 samples):")
for i in range(10):
    print(f"Actual: {y_test[i]:.2f}, Predicted: {y_pred[i]:.2f}")

data = pd.DataFrame(data)
data