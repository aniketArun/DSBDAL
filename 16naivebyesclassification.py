# -*- coding: utf-8 -*-
"""16NaiveByesClassification.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Qm50rbCkPTsStiXD5rQ2rILbajcRcqxs

1. Implement Simple Na√Øve Bayes classification algorithm using Python/R on iris.csv dataset.
2. Compute Confusion matrix to find TP, FP, TN, FN, Accuracy, Error rate, Precision, Recall on the given dataset
"""

import pandas as pd
import numpy as np
from sklearn.datasets import load_iris

csv_url = 'https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data'
col_names = ['Sepal_Length','Sepal_Width','Petal_Length','Petal_Width','Species']
iris = pd.read_csv(csv_url, names = col_names)

iris.head()

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()

iris['Species'] = le.fit_transform(iris['Species'])

iris.head()

iris.corr()

iris.isna().sum()

x = iris.drop(['Species'], axis = 1)
y = iris['Species']

from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import precision_score, recall_score, accuracy_score
from sklearn.model_selection import train_test_split
nv = GaussianNB()
x_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.2)

nv.fit(x_train, y_train)

y_pred = nv.predict(x_test)
y_pred

accuracy_score(y_test,y_pred)

precision_score(y_test, y_pred, average='micro')

recall_score(y_test, y_pred, average='micro')

from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay
cm = confusion_matrix(y_test, y_pred)

ConfusionMatrixDisplay(cm).plot()

